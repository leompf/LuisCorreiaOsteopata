@model LuisCorreiaOsteopata.WEB.Models.ProfileViewModel

@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

@section MainMenu
{
    <partial name="_Menu"></partial>
}

<section class="page-header">
    <div class="page-header__bg" style="background-image: url(assets/images/backgrounds/page-header-bg.jpg);">
    </div>
    <div class="container">
        <div class="page-header__inner">
            <h3>Perfil</h3>
            <div class="thm-breadcrumb__inner">
                <ul class="thm-breadcrumb list-unstyled">
                    <li><a asp-controller="Account" asp-action="Index">Home</a></li>
                    <li><span class="icon-arrow-left"></span></li>
                    <li>Perfil</li>
                </ul>
            </div>
        </div>
    </div>
</section>

<section class="appoinment-page" id="profile-section" style="margin-top: -100px">
    <div class="container">
        <div class="row">
            <div class="col-xl-12 col-lg-7">
                <div class="appoinment-page__left">
                    <h3 class="appoinment-page__title">Perfil</h3>
                    <form method="post">
                        <div asp-validation-summary="ModelOnly"></div>
                        <div class="row">
                            <div class="form-group row mb-4">
                                <label class="col-auto col-form-label pe-1"><strong>Nome:</strong></label>
                                <div class="col-4 ps-1">
                                    <input type="text" asp-for="Name" class="form-control" readonly="@(!Model.IsEditable)" />
                                </div>

                                <label class="col-auto col-form-label pe-1"><strong>Data de Nascimento:</strong></label>
                                <div class="col-auto ps-1">
                                    <input asp-for="BirthDate" type="date" class="form-control" readonly="@(!Model.IsEditable)"
                                           value="@Model.BirthDate?.ToString("yyyy-MM-dd")" />
                                    <span asp-validation-for="BirthDate" class="text-danger"></span>
                                </div>

                                <label class="col-auto col-form-label pe-1"><strong>Telefone:</strong></label>
                                <div class="col-2 ps-1">
                                    <input type="tel" asp-for="PhoneNumber" id="phone" readonly="@(!Model.IsEditable)" class="form-control" />
                                </div>
                            </div>

                            <div class="form-group row mb-3">
                                <label class="col-auto col-form-label pe-1"><strong>Email:</strong></label>
                                <div class="col-sm-3 ps-1">
                                    <input type="email" asp-for="Email" id="email" readonly="@(!Model.IsEditable)" class="form-control" />
                                </div>

                                <label class="col-auto col-form-label pe-1"><strong>NIF:</strong></label>
                                <div class="col-auto ps-1">
                                    <input type="text" asp-for="NIF" id="nif" class="form-control" readonly="@(!Model.IsEditable) || (string.IsNullOrEmpty(Model.NIF))" />
                                </div>
                                <span asp-validation-for="NIF"></span>
                            </div>

                            <div class="form-group row mb-3">
                                <label class="col-auto col-form-label pe-1"><strong>Tipo de Perfil:</strong></label>
                                <div class="col-auto ps-1">
                                    <input type="text" asp-for="Role" readonly class="form-control w-auto" />
                                </div>
                            </div>

                            @if (Model.IsEditable)
                            {
                                <div class="form-group row mb-3">
                                    <button type="submit" asp-action="UpdateUser" class="col-auto thm-btn" disabled="@(!Model.IsEditable)">
                                        Gravar Alterações
                                        <span class="icon-right-arrow"></span>
                                    </button>
                                </div>
                            }
                        </div>
                    </form>
                    <div class="form-group row">
                        <form method="post" asp-controller="Google" asp-action="SavePreferredCalendar">
                            @if (ViewBag.Token == null)
                            {
                                @if (Model.IsEditable)
                                {
                                    <a asp-controller="Google" asp-action="LinkGoogleCalendar" class="btn btn-danger">
                                        <i class="fab fa-google"></i> Conectar ao Google Calendar
                                    </a>
                                }
                            }
                            @if (ViewBag.GoogleCalendars != null && ViewBag.GoogleCalendars.Count > 0)
                            {
                                <div class="cart-page__buttons cart-page__buttons-1">
                                    <label class="col-auto col-form-label pe-1">
                                        <strong>
                                            Calendário do Google Calendar:
                                        </strong>
                                        @(string.IsNullOrWhiteSpace(Model.CalendarId) ? "Calendário não escolhido" : Model.CalendarName)
                                    </label>

                                    @if (Model.IsEditable)
                                    {
                                        <button type="submit" asp-controller="Google" asp-action="SavePreferredCalendar" class="thm-btn" id="calendarButton">
                                            @if (string.IsNullOrWhiteSpace(Model.CalendarId))
                                            {
                                                @:Definir calendário
                                            }
                                            else
                                            {
                                                @:Alterar Calendário Selecionado
                                            }
                                            <span class="icon-right-arrow"></span>
                                        </button>
                                    }
                                </div>

                                <input type="hidden" name="CalendarId" id="hiddenCalendarId" value="@Model.CalendarId" />
                            }
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div id="confirmDialog" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Selecionar Calendário</h4>
                <button type="button" class="close" data-bs-dismiss="modal"><i class="fa fa-window-close"></i></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>Seleciona o calendário Google para as consultas:</label>
                    <div class="col-auto">
                        <select id="modalCalendarSelect" class="form-control">
                            <option value="">-- Selecionar calendário --</option>
                            @foreach (var cal in ViewBag.GoogleCalendars)
                            {
                                if (Model.CalendarId == cal.Value)
                                {
                                    <option value="@cal.Value" selected>@cal.Text</option>
                                }
                                else
                                {
                                    <option value="@cal.Value">@cal.Text</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="btnYes">Confirmar</button>
                <button type="button" class="btn btn-danger" id="btnNo">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            const phoneInput = document.querySelector("#phone");

            if (!phoneInput) return;

            const iti = window.intlTelInput(phoneInput, {
                initialCountry: "pt",
                separateDialCode: false,
                formatOnDisplay: true,
                autoPlaceholder: "off"
            });

            const form = phoneInput.closest("form");

            function ensureErrorSpan(input) {
                let span = input.nextElementSibling;
                if (!span || !span.classList.contains("inline-error")) {
                    span = document.createElement("span");
                    span.classList.add("inline-error");
                    span.style.color = "red";
                    span.style.fontSize = "0.9rem";
                    input.parentNode.appendChild(span);
                }
                span.textContent = "";
                return span;
            }

            form.addEventListener("submit", function (event) {
                let hasErrors = false;

                const phoneError = ensureErrorSpan(phoneInput);
                if (!iti.isValidNumber()) {
                    phoneError.textContent = "Número de telefone inválido.";
                    phoneInput.classList.add("is-invalid");
                    hasErrors = true;
                } else {
                    phoneInput.value = iti.getNumber();
                    phoneInput.classList.remove("is-invalid");
                }

                if (hasErrors) {
                    event.preventDefault();
                }
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            const confirmDialogEl = document.getElementById('confirmDialog');
            const confirmDialog = new bootstrap.Modal(confirmDialogEl);

            const calendarButton = $("#calendarButton");
            const btnYes = $("#btnYes");
            const btnNo = $("#btnNo");
            const modalSelect = $("#modalCalendarSelect");
            const hiddenInput = $("#hiddenCalendarId");

            calendarButton.click(function (e) {
                e.preventDefault();
                confirmDialog.show();
            });

            btnYes.click(function () {
                hiddenInput.val(modalSelect.val());;
                confirmDialog.hide();
                calendarButton.closest("form").submit();
            });

            btnNo.click(function () {
                confirmDialog.hide();
            });
        });

        document.addEventListener("DOMContentLoaded", function ()
        {
            const profileSection = document.getElementById("profile-section");
            if (profileSection)
            {
                profileSection.scrollIntoView({ behavior: "smooth" });
            }
        });
    </script>
}