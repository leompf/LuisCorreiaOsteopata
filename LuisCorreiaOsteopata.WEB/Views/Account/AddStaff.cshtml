@model LuisCorreiaOsteopata.WEB.Models.AddNewStaffViewModel

@{
    ViewData["Title"] = "Criar Colaborador";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

@section MainMenu
{
    <partial name="_Menu"></partial>
}

<section class="page-header">
    <div class="page-header__bg" style="background-image: url(~/assets/images/backgrounds/page-header-bg.jpg);">
    </div>
    <div class="container">
        <div class="page-header__inner">
            <h3>Criar Colaborador</h3>
            <div class="thm-breadcrumb__inner">
                <ul class="thm-breadcrumb list-unstyled">
                    <li><a asp-action="Index">Home</a></li>
                    <li><span class="icon-arrow-left"></span></li>
                    <li>Criar Colaborador</li>
                </ul>
            </div>
        </div>
    </div>
</section>

<!--Start Sign Up One-->
<section class="sign-up-one" id="register-section">
    <div class="container">
        <div class="sign-up-one__form">
            <div class="inner-title text-center">
                <h2>Criar Colaborador</h2>
            </div>
            <form method="post">
                <div class="row">
                    <div class="col-xl-6">
                        <div class="form-group">
                            <div class="input-box">
                                <span asp-validation-for="Names"></span>
                                <input asp-for="Names" type="text" placeholder="Nomes..." />
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="form-group">
                            <div class="input-box">
                                <span asp-validation-for="LastName"></span>
                                <input asp-for="LastName" type="text" placeholder="Apelido..." />
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-12">
                        <div class="form-group">
                            <div class="input-box">
                                <span asp-validation-for="Email"></span>
                                <input asp-for="Email" type="email" placeholder="Email de colaborador..." />
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="form-group">
                            <div class="input-box">
                                <span asp-validation-for="PhoneNumber"></span>
                                <input asp-for="PhoneNumber" type="tel" id="phone" placeholder="Telefone..." />
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="form-group">
                            <div class="input-box">
                                <span asp-validation-for="Nif"></span>
                                <input asp-for="Nif" type="text" id="nif" placeholder="Nif..." />
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="form-group">
                            <div class="appoinment-page__input-box">
                                <span asp-validation-for="Birthdate"></span>
                                <input asp-for="Birthdate" type="date" placeholder="Data de Nascimento..." />
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="form-group">
                            <div class="select-box">
                                <span asp-validation-for="Role"></span>
                                <input asp-for="Role" type="hidden" readonly value="Colaborador" />
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-12">
                        <div class="form-group">
                            <button class="thm-btn" type="submit" data-loading-text="Por favor aguarda...">
                                Criar
                                <span class="icon-right-arrow"></span>
                            </button>
                        </div>
                    </div>
                    <div class="text-center text-success">
                        <p>@ViewBag.AddStaffMessage</p>
                    </div>
                    <div asp-validation-summary="ModelOnly"></div>
                </div>
            </form>
        </div>
    </div>
</section>>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script type="text/javascript">
            document.addEventListener("DOMContentLoaded", function () {

                const registerSection = document.getElementById("register-section");
                if (registerSection) {
                    registerSection.scrollIntoView({ behavior: "smooth" });
                }

                const phoneInput = document.querySelector("#phone");
                const nifInput = document.querySelector("#nif");

                const iti = window.intlTelInput(phoneInput, {
                    initialCountry: "pt",
                    separateDialCode: false,
                    formatOnDisplay: true
                });

                const form = phoneInput.closest("form");

                function ensureErrorSpan(input) {
                    let span = input.nextElementSibling;
                    if (!span || !span.classList.contains("inline-error")) {
                        span = document.createElement("span");
                        span.classList.add("inline-error");
                        span.style.color = "red";
                        span.style.fontSize = "0.9rem";
                        input.parentNode.appendChild(span);
                    }
                    span.textContent = "";
                    return span;
                }

                form.addEventListener("submit", function (event) {
                    let hasErrors = false;

                    const phoneError = ensureErrorSpan(phoneInput);
                    if (!iti.isValidNumber()) {
                        phoneError.textContent = "Número de telefone inválido.";
                        phoneInput.classList.add("is-invalid");
                        hasErrors = true;
                    } else {
                        phoneInput.value = iti.getNumber();
                        phoneInput.classList.remove("is-invalid");
                    }

                    const nifError = ensureErrorSpan(nifInput);
                    if (!validaContribuinte(nifInput.value)) {
                        nifError.textContent = "Número de contribuinte inválido.";
                        nifInput.classList.add("is-invalid");
                        hasErrors = true;
                    } else {
                        nifInput.classList.remove("is-invalid");
                    }

                    if (hasErrors) {
                        event.preventDefault();
                    }
                });

                function validaContribuinte(contribuinte) {
                    if (!/^\d{9}$/.test(contribuinte)) return false;

                    const prefix = parseInt(contribuinte.substr(0, 2));
                    const firstDigit = parseInt(contribuinte.charAt(0));
                    const invalidPrefixes = [45, 70, 71, 72, 77, 79, 90, 91, 98, 99];
                    const validFirstDigits = [1, 2, 3, 5, 6, 8];

                    if (!validFirstDigits.includes(firstDigit) && !invalidPrefixes.includes(prefix)) return false;

                    let total = 0;
                    for (let i = 0, j = 9; i < 8; i++, j--) {
                        total += parseInt(contribuinte.charAt(i)) * j;
                    }

                    let modulo11 = total % 11;
                    let comparador = (modulo11 === 0 || modulo11 === 1) ? 0 : 11 - modulo11;
                    const ultimoDigito = parseInt(contribuinte.charAt(8));

                    return ultimoDigito === comparador;
                }
            });
        </script>
    }
}

