@{
    ViewData["Title"] = "Admin";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

@section MainMenu
{
    <partial name="_Menu"></partial>
}

<section class="service-details" id="home">
    <div class="container">
        <div class="row">
            <div class="service-details__content">
                <h3 class="service-details__title-1">
                    Bem-vindo, Administrador
                </h3>
            </div>
        </div>
    </div>
</section>

<div class="container my-4">
    <!-- Cartões de Resumo -->
    <div class="row g-3">
        <div class="col-sm-6 col-md-3">
            <div class="card text-center shadow-sm p-3 h-100">
                <div class="card-body">
                    <h6 class="card-title text-muted">Total de Consultas</h6>
                    <h5 id="totalAppointments">A carregar...</h5>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="card text-center shadow-sm p-3 h-100">
                <div class="card-body">
                    <h6 class="card-title text-muted">Consultas Futuras</h6>
                    <h5 id="upcomingAppointments">A carregar...</h5>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="card text-center shadow-sm p-3 h-100">
                <div class="card-body">
                    <h6 class="card-title text-muted">Total de Pedidos</h6>
                    <h5 id="totalOrders">A carregar...</h5>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="card text-center shadow-sm p-3 h-100">
                <div class="card-body">
                    <h6 class="card-title text-muted">Receita Total</h6>
                    <h5 id="totalRevenue">A carregar...</h5>
                </div>
            </div>
        </div>
    </div>

    <!-- Gráficos -->
    <div class="row mt-4 g-3">
        <div class="col-12 col-md-4">
            <div class="card shadow-sm p-3">
                <h6 class="card-title text-muted">Consultas por Mês</h6>
                <canvas id="appointmentsChart" height="400"></canvas>
            </div>
        </div>
        <div class="col-12 col-md-4">
            <div class="card shadow-sm p-3">
                <h6 class="card-title text-muted">Pedidos por Mês</h6>
                <canvas id="ordersChart" height="400"></canvas>
            </div>
        </div>
        <div class="col-12 col-md-4">
            <div class="card shadow-sm p-3">
                <h6 class="card-title text-muted">Receita por Mês</h6>
                <canvas id="revenueChart" height="400"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let appointmentsChart, ordersChart, revenueChart;

        async function loadMetrics() {
            const res = await fetch(`/api/account/metrics`);
            const data = await res.json();

            // --- Cartões resumo ---
            document.getElementById('totalAppointments').innerText = data.summary.totalAppointments;
            document.getElementById('upcomingAppointments').innerText = data.summary.upcomingAppointments;
            document.getElementById('totalOrders').innerText = data.summary.totalOrders;
            document.getElementById('totalRevenue').innerText =
                new Intl.NumberFormat('pt-PT', { style: 'currency', currency: 'EUR' })
                    .format(data.summary.totalRevenue);

            // --- Dados dos gráficos ---
            const mesesA = data.charts.appointmentsByMonth.map(x => x.month);
            const valoresA = data.charts.appointmentsByMonth.map(x => x.count);

            const mesesO = data.charts.ordersByMonth.map(x => x.month);
            const valoresO = data.charts.ordersByMonth.map(x => x.count);

            const mesesR = data.charts.revenueByMonth.map(x => x.month);
            const valoresR = data.charts.revenueByMonth.map(x => x.revenue);

                    // --- Gráfico de Marcações ---
        const ctxA = document.getElementById('appointmentsChart').getContext('2d');
        if (appointmentsChart) appointmentsChart.destroy();

        appointmentsChart = new Chart(ctxA, {
            type: 'bar',
            data: {
                labels: mesesA,
                datasets: [{
                    label: 'Consultas',
                    data: valoresA,
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1, // integer ticks
                            callback: value => Number.isInteger(value) ? value : null
                        }
                    }
                },
                plugins: {
                    legend: { display: true, position: 'top' }
                }
            }
        });

        // --- Gráfico de Encomendas ---
        const ctxO = document.getElementById('ordersChart').getContext('2d');
        if (ordersChart) ordersChart.destroy();

        ordersChart = new Chart(ctxO, {
            type: 'bar',
            data: {
                labels: mesesO,
                datasets: [{
                    label: 'Pedidos',
                    data: valoresO,
                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1,
                            callback: value => Number.isInteger(value) ? value : null
                        }
                    }
                },
                plugins: {
                    legend: { display: true, position: 'top' }
                }
            }
        });

            // --- Gráfico de Receita ---
            const ctxR = document.getElementById('revenueChart').getContext('2d');
            if (revenueChart) revenueChart.destroy();

            revenueChart = new Chart(ctxR, {
                type: 'bar',
                data: {
                    labels: mesesR,
                    datasets: [{
                        label: 'Receita (€)',
                        data: valoresR,
                        backgroundColor: 'rgba(54, 162, 235, 0.5)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: value => new Intl.NumberFormat('pt-PT', {
                                    style: 'currency',
                                    currency: 'EUR',
                                    minimumFractionDigits: 0
                                }).format(value)
                            }
                        }
                    },
                    plugins: {
                        legend: { display: true, position: 'top' }
                    }
                }
            });
        }

        // --- Carregamento inicial ---
        document.addEventListener('DOMContentLoaded', loadMetrics);
    </script>
}
